---
const res = await fetch('https://hs.vtolvr.live/api/v1/public/online')
const time: number = Date.now();
const data = await res.json()
let allied = []
let enemy = []
for (let i = 0; i < data.length; i++) {
	const eloRes = await fetch(`https://hs.vtolvr.live/api/v1/public/users/${data[i].id}`)
	const eloData = await eloRes.json()
	data[i]['elo'] = Math.round(eloData.elo)
}
for (let i = 0; i < data.length; i++) {
	if (data[i].team === 'Allied') {
		allied.push(data[i])
	} else if (data[i].team === 'Enemy') {
		enemy.push(data[i])
	}
}
const users = allied.length + enemy.length

let alliedLow = 0
let alliedHigh = 0
let alliedAvg = 0
let enemyLow = 0
let enemyHigh = 0
let enemyAvg = 0
let serverStatus: string
let serverColor: string

if (users === 0) {
	let client = []
	for (const i of data) {
		if (i.team === "Unknown") {
			client.push(i)
		}
	}
	if (!client.length) {
		serverStatus = 'Offline'
		serverColor = '#FF0000'
	} else {
		serverStatus = 'Online - Empty'
		serverColor = '#FFF500'
	}
} else {
	allied = allied.sort((a, b) => b.elo - a.elo)
	alliedLow = allied[allied.length - 1].elo
	alliedHigh = allied[0].elo
	alliedAvg = 0
	for (let i = 0; i < allied.length; i++) {alliedAvg += allied[i].elo}
	alliedAvg = Math.round(alliedAvg / allied.length)

	enemy = enemy.sort((a, b) => b.elo - a.elo)
	enemyLow = enemy[enemy.length - 1].elo
	enemyHigh = enemy[0].elo
	enemyAvg = 0
	for (let i = 0; i < enemy.length; i++) {enemyAvg += enemy[i].elo}
	enemyAvg = Math.round(enemyAvg / enemy.length)

	let client = []
	for (const i of data) {
		if (i.team === "Unknown") {
			client.push(i)
		}
	}
	if (!client.length) {
		serverStatus = 'Offline'
		serverColor = '#FF0000'
	} else {
		serverStatus = 'Online'
		serverColor = '#42FF00'
	}
}
---

<main>
    <div class="bar">
        <p class="barText">Users Online:</p>
        <div class="inline">
            <p class="barText">{users}/16</p>
            <button onclick="window.location.href=''">
                <svg width="24" height="24" viewBox="0 0 25 25" xmlns="http://www.w3.org/2000/svg">
                    <path d="M12.3251 20.5C10.0917 20.5 8.20007 19.725 6.65007 18.175C5.10007 16.625 4.32507 14.7333 4.32507 12.5C4.32507 10.2667 5.10007 8.375 6.65007 6.825C8.20007 5.275 10.0917 4.5 12.3251 4.5C13.4751 4.5 14.5751 4.7375 15.6251 5.2125C16.6751 5.6875 17.5751 6.36667 18.3251 7.25V5.5C18.3251 5.21667 18.4209 4.97917 18.6126 4.7875C18.8042 4.59583 19.0417 4.5 19.3251 4.5C19.6084 4.5 19.8459 4.59583 20.0376 4.7875C20.2292 4.97917 20.3251 5.21667 20.3251 5.5V10.5C20.3251 10.7833 20.2292 11.0208 20.0376 11.2125C19.8459 11.4042 19.6084 11.5 19.3251 11.5H14.3251C14.0417 11.5 13.8042 11.4042 13.6126 11.2125C13.4209 11.0208 13.3251 10.7833 13.3251 10.5C13.3251 10.2167 13.4209 9.97917 13.6126 9.7875C13.8042 9.59583 14.0417 9.5 14.3251 9.5H17.5251C16.9917 8.56667 16.2626 7.83333 15.3376 7.3C14.4126 6.76667 13.4084 6.5 12.3251 6.5C10.6584 6.5 9.24174 7.08333 8.07507 8.25C6.90841 9.41667 6.32507 10.8333 6.32507 12.5C6.32507 14.1667 6.90841 15.5833 8.07507 16.75C9.24174 17.9167 10.6584 18.5 12.3251 18.5C13.4584 18.5 14.4959 18.2125 15.4376 17.6375C16.3792 17.0625 17.1084 16.2917 17.6251 15.325C17.7584 15.0917 17.9459 14.9292 18.1876 14.8375C18.4292 14.7458 18.6751 14.7417 18.9251 14.825C19.1917 14.9083 19.3834 15.0833 19.5001 15.35C19.6167 15.6167 19.6084 15.8667 19.4751 16.1C18.7917 17.4333 17.8167 18.5 16.5501 19.3C15.2834 20.1 13.8751 20.5 12.3251 20.5Z" fill="#E8EAED"/>
                </svg>
            </button>
        </div>
    </div>
    <div id="board">
        <div class="team">
            <p class="teamTitle" id="allied">Allied (Team A):</p>
            <div class="stats">
                <p class="name">Range: {alliedLow}-{alliedHigh}</p>
                <p class="name">Average: {alliedAvg}</p>
            </div>
			{allied.map((i) => <div class="player"><p class="name">{i.name}</p><p class="elo">{i.elo}</p></div>)}
        </div>
		<div id="sep"></div>
        <div class="team">
            <p class="teamTitle" id="enemy">Enemy (Team B):</p>
            <div class="stats">
                <p class="name">Range: {enemyLow}-{enemyHigh}</p>
                <p class="name">Average: {enemyAvg}</p>
            </div>
			{enemy.map((i) => <div class="player"><p class="name">{i.name}</p><p class="elo">{i.elo}</p></div>)}
        </div>
    </div>
    <div class="bar">
        <div class="inline">
			<p class="barText">Status: <span id=highlight">{serverStatus}</span></p>
            <div class="circle"></div>
        </div>
        <p class="barText">Last User Update: <span id="editTime">{Math.round((Date.now() - time) / 1000)}</span> seconds ago</p>
    </div>
</main>
<script define:vars={{ time }}>
	setInterval(() => {
		document.getElementById("editTime").innerText = Math.round((Date.now() - time) / 1000).toString()
	}, 1000)
</script>

<style define:vars={{serverColor}}>
	main {
        width: 0;
		border-radius: 12px;

		display: flex;
		flex-direction: column;
        justify-content: center;
        align-items: center;
		box-sizing: border-box;
		padding: 10px;
		gap: 10px;

        background: rgba(255, 255, 255, 0.1);
		border: #4E4E4E 2px solid;
	}

	.bar {
        width: 100%;

		display: flex;
		flex-direction: row;
		justify-content: space-between;
        align-items: center;
		box-sizing: border-box;
		padding: 10px;
	}

	.barText {
        font-family: Satoshi, system-ui;
        font-weight: 400;
		font-size: 24px;
	}

	.inline {
		display: flex;
		flex-direction: row;
        justify-content: center;
        align-items: center;
		gap: 10px;
	}

	button {
        background: none;
		border: none;
        width: 24px;
        height: 24px;
	}

	#board {
		width: 100%;
		border-radius: 12px;

		display: flex;
		flex-direction: row;
        justify-content: space-between;

        background: rgba(255, 255, 255, 0.02);
		border: #4E4E4E 2px solid;
	}

	.team {
		width: 46.25%;
        height: 100%;

		display: flex;
		flex-direction: column;
		gap: 10px;
		padding: 15px;
	}

	div#sep {
		width: 2px;
        min-height: 100%;

        background: #4E4E4E;
	}

	.teamTitle {
        font-family: Satoshi, system-ui;
        font-weight: 600;
		font-size: 40px;
	}

	#allied {
		color: #FF6B00;
	}

	#enemy {
		color: #00C2FF;
	}
	
	.stats {
		width: 100%;
		border-radius: 12px;
		
		display: flex;
		flex-wrap: wrap;
        justify-content: space-between;
		gap: 10px;
		box-sizing: border-box;
		padding: 15px;

        background: rgba(255, 255, 255, 0.1);
	}

	.name {
        font-family: Satoshi, system-ui;
        font-weight: 500;
		font-size: 24px;
	}

	.player {
        width: 100%;

		display: flex;
		flex-direction: row;
        justify-content: space-between;
		box-sizing: border-box;
		padding: 10px;
	}

	.elo {
        font-family: Satoshi, system-ui;
        font-weight: 500;
        font-size: 24px;
		color: rgba(255, 255, 255, 0.7);
	}

	span#highlight {
		color: var(--serverColor) !important;
	}

	.circle {
        width: 15px;
        height: 15px;
		border-radius: 7.5px;
        background: var(--serverColor);
	}

	* {
		padding: 0;
		margin: 0;
	}
</style>